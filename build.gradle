buildscript {
	repositories {
		jcenter()
		maven { url = "http://files.minecraftforge.net/maven" }
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	}
}
plugins {
	id "com.matthewprenger.cursegradle" version "1.0.10"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

ext.build_number = System.getenv('BUILD_NUMBER')
if (!build_number) {
	ext.build_number = System.getenv('TRAVIS_BUILD_NUMBER')
}

if (build_number) {
	version = mod_version + '.' + build_number
} else {
	version = mod_version
}

group = mod_group
archivesBaseName = mod_name


minecraft {
	version = forge_version
	mappings = mcp_version

	runDir = "run"
	makeObfSourceJar = false

	replace '@VERSION@', project.version
	replaceIn 'ChestCounter.java'
}

sourceCompatibility = targetCompatibility = '1.8'

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

ext.keystore = System.getenv("KEYSTORE")
ext.keystorePass = System.getenv("KEYSTORE_PASSWORD")
ext.keyPass = System.getenv("KEY_PASSWORD")
ext.keyAlias = System.getenv("KEY_ALIAS")

task signJar(type: Exec, dependsOn: reobfJar) {
	onlyIf {
		project.keystore && project.keystorePass && project.keyPass && project.keyAlias
	}

	commandLine "jarsigner", "-keystore", keystore, "-storepass", keystorePass, "-keypass", keyPass,
			"-tsa", "http://timestamp.comodoca.com", "-tsadigestalg", "SHA-512",
//			"-sigalg", "SHA512withECDSA", "-digestalg", "SHA-512",
			jar.archivePath, keyAlias
}

build.dependsOn signJar

ext.curseKey = System.getenv("CURSE_API_KEY")
ext.curseReleaseType = 'release'
ext.curseVersion = version

tasks.curseforge.onlyIf { curseKey }
tasks.curseforge.dependsOn signJar

if (curseKey && hasProperty('curse_id')) {
	curseforge {
		apiKey = curseKey

		project {
			id = curse_id
			changelog = "Changes..."
			releaseType = curseReleaseType
			addGameVersion minecraft.version

			if (hasProperty('curseExtraVersions')) {
				for (version in curseExtraVersions) {
					addGameVersion version
				}
			}

			mainArtifact(jar) {
				displayName = "$mod_name $curseVersion"
			}
		}
	}
}

processResources {
	inputs.property "version", version
	inputs.property "mcversion", minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		expand 'version': version, 'mcversion': minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

task copyToGame(type: Copy, dependsOn: build) {
	// Provide the destination directory like so: -Pdest=/path/to/destination
	def dest = "./"
	from file("${buildDir}/libs/${archivesBaseName}-${version}.jar")
	into file(dest)
}

idea {
	module {
		inheritOutputDirs = true
	}

	project {
		vcs = 'Git'
	}
}
